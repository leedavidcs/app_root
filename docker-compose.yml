version: '3.7'
services:
  pgadmin4:
    image: dpage/pgadmin4:latest
    ports:
      - 5050:80
    networks:
      - backend
    env_file:
      - ./.env.pgadmin4
    volumes:
      - pgadmin4:/root/.pgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    logging:
      driver: none
  postgres:
    image: postgres:latest
    container_name: prisma-test_postgres
    ports:
      - 5432:5432
    networks:
      - backend
    env_file:
      - ./.env.postgres
    volumes:
      - postgres:/var/lib/postgres/data
    restart: unless-stopped
  redis-auth:
    image: redis:alpine
    container_name: stock-app_redis-auth
    restart: always
    ports:
      - 6379:6379
    networks:
      - backend
    volumes:
      - redis-auth:/data
    logging:
      driver: none
  redis-graphql:
    image: redis:alpine
    container_name: stock-app_redis-graphql
    restart: always
    command: --port 6380
    ports:
      - 6380:6380
    networks:
      - backend
    volumes:
      - redis-graphql:/data
    logging:
      driver: none
  server:
    container_name: stock-app_server
    env_file:
      - ./server/.env.development
    depends_on:
      - redis-auth
      - redis-graphql
    build:
      dockerfile: Dockerfile
      context: ./server/.
      network: host
    ports:
      - 3031:3031
    networks:
      - backend
  server-dependencies:
    image: alpine:latest
    depends_on:
      - pgadmin4
      - postgres
      - redis-auth
      - redis-graphql
networks:
  backend:
volumes:
  pgadmin4:
  postgres:
  redis-auth:
  redis-graphql:
